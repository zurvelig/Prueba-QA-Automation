{
	"info": {
		"_postman_id": "4e8d1f32-6798-4a2d-83c8-addc368c2f8a",
		"name": "Desafio-Falabella-Users",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GET - Users_Ej",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Validamos que el status sea 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Validamos que la estructura de los posts sea la correcta\", () => {\r",
							"    pm.expect(pm.response.text()).to.include(\"id\");\r",
							"    pm.expect(pm.response.text()).to.include(\"name\");\r",
							"    pm.expect(pm.response.text()).to.include(\"username\");\r",
							"    pm.expect(pm.response.text()).to.include(\"email\");\r",
							"    pm.expect(pm.response.text()).to.include(\"address\");\r",
							"    pm.expect(pm.response.text()).to.include(\"street\");\r",
							"    pm.expect(pm.response.text()).to.include(\"suite\");\r",
							"    pm.expect(pm.response.text()).to.include(\"city\");\r",
							"    pm.expect(pm.response.text()).to.include(\"zipcode\");\r",
							"    pm.expect(pm.response.text()).to.include(\"geo\");\r",
							"    pm.expect(pm.response.text()).to.include(\"lat\");\r",
							"    pm.expect(pm.response.text()).to.include(\"lng\");\r",
							"    pm.expect(pm.response.text()).to.include(\"phone\");\r",
							"    pm.expect(pm.response.text()).to.include(\"website\");\r",
							"    pm.expect(pm.response.text()).to.include(\"company\");\r",
							"    pm.expect(pm.response.text()).to.include(\"name\");\r",
							"    pm.expect(pm.response.text()).to.include(\"catchPhrase\");\r",
							"    pm.expect(pm.response.text()).to.include(\"bs\");\r",
							"\r",
							"\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header es application/json; charset=utf-8\", () => {\r",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json; charset=utf-8');\r",
							"});\r",
							"\r",
							"pm.test(\"Tiempo de respuesta debe ser menor a 500\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/{{endPointUsers}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{endPointUsers}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET - Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Validamos que el status sea 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Validamos que la estructura de los posts sea la correcta\", () => {\r",
							"    pm.expect(pm.response.text()).to.include(\"id\");\r",
							"    pm.expect(pm.response.text()).to.include(\"name\");\r",
							"    pm.expect(pm.response.text()).to.include(\"username\");\r",
							"    pm.expect(pm.response.text()).to.include(\"email\");\r",
							"    pm.expect(pm.response.text()).to.include(\"address\");\r",
							"    pm.expect(pm.response.text()).to.include(\"street\");\r",
							"    pm.expect(pm.response.text()).to.include(\"suite\");\r",
							"    pm.expect(pm.response.text()).to.include(\"city\");\r",
							"    pm.expect(pm.response.text()).to.include(\"zipcode\");\r",
							"    pm.expect(pm.response.text()).to.include(\"geo\");\r",
							"    pm.expect(pm.response.text()).to.include(\"lat\");\r",
							"    pm.expect(pm.response.text()).to.include(\"lng\");\r",
							"    pm.expect(pm.response.text()).to.include(\"phone\");\r",
							"    pm.expect(pm.response.text()).to.include(\"website\");\r",
							"    pm.expect(pm.response.text()).to.include(\"company\");\r",
							"    pm.expect(pm.response.text()).to.include(\"name\");\r",
							"    pm.expect(pm.response.text()).to.include(\"catchPhrase\");\r",
							"    pm.expect(pm.response.text()).to.include(\"bs\");\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header es application/json; charset=utf-8\", () => {\r",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json; charset=utf-8');\r",
							"});\r",
							"\r",
							"pm.test(\"Tiempo de respuesta debe ser menor a 500\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/{{endPointUsers}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{endPointUsers}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET - User especifico",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Validar que trae el objeto correcto especficado\", () => {\r",
							"  pm.expect(jsonData.name).to.include(\"Leanne Graham\");\r",
							"  pm.expect(jsonData.username).to.include(\"Bret\");\r",
							"  pm.expect(jsonData.email).to.include(\"Sincere@april.biz\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/{{endPointUsers}}/1",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{endPointUsers}}",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET - Users Not Found",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validamos que el status sea 404 al ingresar EndPoint incorrecto\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/user",
					"host": [
						"{{host}}"
					],
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST - User Registro",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Validamos que el status sea ok\", function () {\r",
							"   // pm.response.to.have.status(200);\r",
							"   pm.expect(pm.response.code).to.be.oneOf([200,201,204]);\r",
							"});\r",
							"\r",
							"pm.test(\"Tiempo de respuesta debe ser menor a 500\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 11,\r\n    \"name\": \"Zurveli Gonz√°lez\",\r\n    \"username\": \"zurve\",\r\n    \"email\": \"Sincerezz@april.biz\",\r\n    \"address\": {\r\n      \"street\": \"Kulas Light\",\r\n      \"suite\": \"Apt. 556\",\r\n      \"city\": \"Gwenborough\",\r\n      \"zipcode\": \"92998-3874\",\r\n      \"geo\": {\r\n        \"lat\": \"-37.3159\",\r\n        \"lng\": \"81.1496\"\r\n      }\r\n    },\r\n    \"phone\": \"1-770-736-8031 x56442\",\r\n    \"website\": \"hildegard.org\",\r\n    \"company\": {\r\n      \"name\": \"Romaguera-Crona\",\r\n      \"catchPhrase\": \"Multi-layered client-server neural-net\",\r\n      \"bs\": \"harness real-time e-markets\"\r\n    }\r\n  }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/users",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT - User Modificar",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Validamos que el status sea ok\", function () {\r",
							"   // pm.response.to.have.status(200);\r",
							"   pm.expect(pm.response.code).to.be.oneOf([200,201,204]);\r",
							"});\r",
							"\r",
							"pm.test(\"Tiempo de respuesta debe ser menor a 500\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 2,\r\n    \"name\": \"Isabel fabiana\",\r\n    \"username\": \"Isa\",\r\n    \"email\": \"Shannddda@melissa.tv\",\r\n    \"address\": {\r\n      \"street\": \"Victor Plains\",\r\n      \"suite\": \"Suite 879\",\r\n      \"city\": \"Wisokyburgh\",\r\n      \"zipcode\": \"90566-7771\",\r\n      \"geo\": {\r\n        \"lat\": \"-43.9509\",\r\n        \"lng\": \"-34.4618\"\r\n      }\r\n    },\r\n    \"phone\": \"010-692-6593 x09125\",\r\n    \"website\": \"anastasia.net\",\r\n    \"company\": {\r\n      \"name\": \"Deckow-Crist\",\r\n      \"catchPhrase\": \"Proactive didactic contingency\",\r\n      \"bs\": \"synergize scalable supply-chains\"\r\n    }\r\n  }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/users/2",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE - User Eliminar",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Validamos que el status sea ok\", function () {\r",
							"   // pm.response.to.have.status(200);\r",
							"   pm.expect(pm.response.code).to.be.oneOf([200,201,204]);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 3,\r\n    \"name\": \"Clementine Bauch\",\r\n    \"username\": \"Samantha\",\r\n    \"email\": \"Nathan@yesenia.net\",\r\n    \"address\": {\r\n      \"street\": \"Douglas Extension\",\r\n      \"suite\": \"Suite 847\",\r\n      \"city\": \"McKenziehaven\",\r\n      \"zipcode\": \"59590-4157\",\r\n      \"geo\": {\r\n        \"lat\": \"-68.6102\",\r\n        \"lng\": \"-47.0653\"\r\n      }\r\n    },\r\n    \"phone\": \"1-463-123-4447\",\r\n    \"website\": \"ramiro.info\",\r\n    \"company\": {\r\n      \"name\": \"Romaguera-Jacobson\",\r\n      \"catchPhrase\": \"Face to face bifurcated interface\",\r\n      \"bs\": \"e-enable strategic applications\"\r\n    }\r\n  }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/users/3",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"users",
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET - User Validar email y username",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Validamos que el status sea ok\", function () {\r",
							"   // pm.response.to.have.status(200);\r",
							"   pm.expect(pm.response.code).to.be.oneOf([200,201,204]);\r",
							"});\r",
							"\r",
							"pm.test(\"Tiempo de respuesta debe ser menor a 500\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"validate user campo email\",function(){\r",
							"  pm.expect(pm.response.text()).to.include(\"email\");\r",
							"})\r",
							"\r",
							"pm.test(\"Validar username este escrito correctamente\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.username).to.eqls(\"Bret\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/users/1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"users",
						"1"
					]
				}
			},
			"response": []
		}
	]
}